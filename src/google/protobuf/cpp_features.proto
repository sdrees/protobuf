// Protocol Buffers - Google's data interchange format
// Copyright 2023 Google Inc.  All rights reserved.
//
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file or at
// https://developers.google.com/open-source/licenses/bsd

syntax = "proto2";

package pb;

import "google/protobuf/descriptor.proto";

extend google.protobuf.FeatureSet {
  optional CppFeatures cpp = 1000;
}

message CppFeatures {
  // Whether or not to treat an enum field as closed.  This option is only
  // applicable to enum fields, and will be removed in the future.  It is
  // consistent with the legacy behavior of using proto3 enum types for proto2
  // fields.
  optional bool legacy_closed_enum = 1 [
    retention = RETENTION_RUNTIME,
    targets = TARGET_TYPE_FIELD,
    targets = TARGET_TYPE_FILE,
    edition_defaults = { edition_enum: EDITION_2023, value: "false" }
  ];

  // The UTF8 validation strategy to use.  See go/editions-utf8-validation for
  // more information on this feature.
  enum Utf8Validation {
    // Invalid default, which should never be used.
    UTF8_VALIDATION_UNKNOWN = 0;
    // Default proto3 behavior, which verifies UTF8 validity during parse.
    VERIFY_PARSE = 1;
    // Default proto2 behavior, which verifies UTF8 validity during both parse
    // and serialize in debug builds.  On failure an error is logged, but the
    // operation continues.
    VERIFY_DLOG = 2;
    // No UTF8 validation is done ever.
    NONE = 3;
  }
  optional Utf8Validation utf8_validation = 2 [
    retention = RETENTION_RUNTIME,
    targets = TARGET_TYPE_FIELD,
    targets = TARGET_TYPE_FILE,
    edition_defaults = { edition_enum: EDITION_2023, value: "VERIFY_PARSE" }
  ];
}
